(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,a,t){e.exports=t(16)},16:function(e,a,t){"use strict";t.r(a);var n=t(0),r=t.n(n),l=t(4),i=t.n(l),o=t(5),s=t(6),c=t(8),u=t(7),m=t(9),d=t(1),h=t(2),y=function(e){return["AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenRod","DarkGray","DarkGrey","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkSlateGrey","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DimGrey","DodgerBlue","FireBrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","GoldenRod","Gray","Grey","Green","GreenYellow","HoneyDew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenRodYellow","LightGray","LightGrey","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSlateGrey","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquaMarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenRod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","RebeccaPurple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","SlateGrey","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen"].map(function(a){return e(a)})},p=function(e,a){return Object(h.a)(Array(e).keys()).map(a)},g=function(e){return e.reduce(function(e,a){return e.concat(a)},[])},f=function(){return g(y(function(e){return p(10,function(a){return{name:e,css:Object(d.a)({backgroundColor:e,opacity:"".concat(a/10)})}})}))},k=Object(d.a)({fontFamily:"Arial"}),b=Object(d.a)({border:"1px solid black",display:"flex",flexWrap:"wrap"}),G=Object(d.a)({border:"1px solid black",margin:"1rem",borderRadius:"1rem",backgroundColor:"#111111",padding:"0.5rem",width:"100px",height:"100px",display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",textAlign:"center"}),w=Object(d.a)({border:"1px solid black",margin:"1rem",borderRadius:"1rem",display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",width:"200px",height:"200px",textAlign:"center"}),S=performance.now(),B=function(e){var a=d.a.apply(void 0,Object(h.a)(e.map(function(e){return e.css})));return e.map(function(e,t){var n=e.name;return{css:a[t],name:n}})}(g(y(function(e){return p(10,function(a){return{name:e,css:{color:e,opacity:"".concat(a/10)}}})}))),E=performance.now()-S;console.log(E);var D=function(e){function a(){var e,t;Object(o.a)(this,a);for(var n=arguments.length,r=new Array(n),l=0;l<n;l++)r[l]=arguments[l];return(t=Object(c.a)(this,(e=Object(u.a)(a)).call.apply(e,[this].concat(r)))).state={},t.generate=function(){var e=performance.now(),a=f(),n=performance.now()-e;t.setState({timeTaken:n,colors:a})},t}return Object(m.a)(a,e),Object(s.a)(a,[{key:"render",value:function(){var e=this.state,a=e.colors,t=e.timeTaken;return r.a.createElement("div",{className:k},r.a.createElement("div",null,r.a.createElement("h1",null,"Stylish Example"),r.a.createElement("p",null,"This page uses stylish two ways, the first it already has, it generated ",r.a.createElement("strong",null,"1480 css rules"),", that you can see presented here already. It took ",r.a.createElement("strong",null,E," milliseconds")," to generate them. It did this in a single call to stylish. The most optimal way to use stylish is to arrange your objects first, and them pass them to stylish. This present unnecessary updates to the stylesheet node."),r.a.createElement("h2",null,"Optimal Example"),r.a.createElement("pre",null,"\n   const fontSizes = [0.5,1,1.2,1.5,1.6,2].map(size => ({ fontSize: size + 'rem' }));\n   const [small, base, med, large, xlarge, xxlarge ] = stylish(fontSizes);\n\n"),r.a.createElement("h2",null,"Bad Example"),r.a.createElement("p",null,"When you press the button, it will generate the styles individually, a few dozen calls to stylish to build up your rules is fine, but as you'll see it's much faster to group your calls where possible. You can notice that while the first load will take a long time, subsuquent calls to stylish will recognize cached rules and be much quicker."),r.a.createElement("pre",null,"\n    const [small, base, med, large, xlarge, xxlarge ] = [0.5,1,1.2,1.5,1.6,2].map(size => stylish({ fontSize: size + 'rem' }));\n"),r.a.createElement("p",null,"For more information about stylish please see the ",r.a.createElement("a",{href:"https://dmamills.github.io/stylish"},"documentation")),r.a.createElement("button",{onClick:this.generate},"Generate styles"),r.a.createElement("p",null,"Generated: ",r.a.createElement("strong",null,a?a.length:0," css rules")," in ",r.a.createElement("strong",null,t||""," milliseconds"))),r.a.createElement("div",{className:b},a&&a.map(function(e,a){return r.a.createElement("div",{key:"".concat(e.name).concat(a),className:"".concat(w," ").concat(e.css)},r.a.createElement("strong",null,e.name),r.a.createElement("strong",null,e.css))})),r.a.createElement("div",{className:b},B&&B.map(function(e,a){return r.a.createElement("div",{key:"".concat(e.name).concat(a),className:G},r.a.createElement("strong",{className:e.css},e.name),r.a.createElement("strong",{className:e.css},e.css))})))}}]),a}(n.Component);i.a.render(r.a.createElement(D,null),document.getElementById("root"))}},[[10,2,1]]]);
//# sourceMappingURL=main.112ffd40.chunk.js.map